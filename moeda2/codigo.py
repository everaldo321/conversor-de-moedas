import streamlit as st
import requests
import pandas as pd
import time


#Incone da pagina
st.set_page_config(page_title="Conversor",page_icon="ü™ô")
#Atalho para o CSS
with open("styles.css") as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)
# Textos da interface
with st.sidebar:
    st.title("Conversor")
    st.header("Curiosidades sobre convers√£o de moedas")
    st.write("O mercado de c√¢mbio, tamb√©m conhecido como Forex (Foreign Exchange), √© o maior e mais l√≠quido mercado financeiro do mundo, com um volume di√°rio de negocia√ß√£o que ultrapassa os 6 trilh√µes de d√≥lares.")
    st.header("Qual o Papel das Taxas de C√¢mbio?")
    st.write("As taxas de c√¢mbio n√£o s√£o apenas para turistas ou para o com√©rcio internacional. Elas tamb√©m influenciam as pol√≠ticas econ√¥micas e as decis√µes financeiras dos pa√≠ses, afetando pre√ßos, infla√ß√£o, juros e, em √∫ltima an√°lise, o crescimento econ√¥mico.")

# Configura√ß√£o inicial do Streamlit
st.markdown('<h1 class="titulo">Conversor de Moedas</h1>', unsafe_allow_html=True)
st.markdown('<p class="paragrafo">As taxas de c√¢mbio oscilam a cada minuto. Nossa ferramenta de convers√£o de moedas fornece aos usu√°rios as taxas de c√¢mbio mais recentes, coletadas de fontes confi√°veis e de s√≥lida reputa√ß√£o, para que eles possam tomar decis√µes informadas em rela√ß√£o a suas transa√ß√µes de c√¢mbio. Com quase 1 ano de experi√™ncia nos mercados de taxas de c√¢mbio, o conversor de moedas tem como base todo o nosso conhecimento, experi√™ncia e profundo entendimento de como os mercados de c√¢mbio funcionam.</p>', unsafe_allow_html=True)

# API Key e URL base da ExchangeRate-API
API_KEY = "6eeced538f92b8b4965c1a1ec1"
BASE_URL = f"https://v6.exchangerate-api.com/v6/{API_KEY}/latest/"

# Fun√ß√£o para obter as taxas de c√¢mbio
def get_exchange_rates(base_currency):
    try:
        response = requests.get(BASE_URL + base_currency)
        response.raise_for_status()
        data = response.json()
        if data["result"] == "success":
            return data["conversion_rates"]
        else:
            st.error(f"Erro: {data['error-type']}")
            return None
    except requests.exceptions.RequestException as e:
        st.error(f"Erro na requisi√ß√£o: {e}")
        return None

# Interface do usu√°rio
moeda_origem = st.selectbox("Moeda de origem", ["USD", "EUR", "BRL", "JPY", "GBP"])
moeda_destino = st.selectbox("Moeda de destino", ["USD", "EUR", "BRL", "JPY", "GBP"])
valor = st.number_input("Valor a ser convertido", min_value=0.0, format="%.2f")

# Bot√£o para iniciar a convers√£o
if st.button("Converter"):
    taxas = get_exchange_rates(moeda_origem)
    # Carregamento de dados
    with st.spinner('Carregando valores....'):
        time.sleep(2)
    if taxas and moeda_destino in taxas:
        taxa_cambio = taxas[moeda_destino]
        resultado = valor * taxa_cambio
        st.success(f"{valor:.2f} {moeda_origem} = {resultado:.2f} {moeda_destino}")

        # Carregamento de dados
        with st.spinner('Carregando Gafico....'):
            time.sleep(2)

        #Graficos do Site
        df = pd.DataFrame(taxas.items(), columns=["Moeda", "Taxa de C√¢mbio"])

        
        col1, col2 = st.columns(2)

        with col1:
            st.markdown("### Taxas de C√¢mbio")
            st.dataframe(df.set_index("Moeda"))

        with col2:
            # Carregamento de dados
            with st.spinner('Carregando Gafico....'):
                time.sleep(2)
            # Gr√°fico de barras com as taxas de c√¢mbio
            st.markdown("### Gr√°fico de Taxas de C√¢mbio")
            st.bar_chart(df.set_index("Moeda")) 

    else:
        st.error("N√£o foi poss√≠vel realizar a convers√£o.")
# Footer
st.markdown('<div class="footer"><p>¬©2024 Alunos: @Antonio_Vinicius, @Francisco_Everaldo, @Pedro_de_Melo.</p></div>', unsafe_allow_html=True)